# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_plot.ipynb.

# %% auto 0
__all__ = ['get_pca', 'plot_2d', 'direct_pca_plot']

# %% ../nbs/01_plot.ipynb 3
from sklearn.decomposition import PCA
from fastbook import *
import seaborn as sns

# %% ../nbs/01_plot.ipynb 4
from .func import *
sns.set(rc={"figure.dpi":300, 'savefig.dpi':300})
sns.set_context('notebook')
sns.set_style("ticks")

# %% ../nbs/01_plot.ipynb 5
def get_pca(df,# the first column is name/id
           seed=123
           ):
    pca = PCA(n_components=2, random_state = seed)
    proj = pca.fit_transform(df.iloc[:,1:])
    pca_df = pd.DataFrame(proj, columns=["PCA1", "PCA2"])
    pca_df = pd.concat([df[df.columns[0]],pca_df],axis=1)
    return pca_df

# %% ../nbs/01_plot.ipynb 6
def plot_2d(pca_df,
           hue,
           palette = 'tab10',
           legend=False):

    sns.relplot(data=pca_df, x='PCA1', y ='PCA2',hue =hue,palette=palette,s=50,alpha=0.8,legend=legend)
    plt.xticks([])
    plt.yticks([])

# %% ../nbs/01_plot.ipynb 7
def direct_pca_plot(df,
                    hue,
                    palette = 'tab10',
                    legend = False):
    pca_df = get_pca(df)
    plot_2d(pca_df,hue,palette,legend)
